// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Inc16(in=tmpOut, out=incOut) ;
    /**
    reset load inc | sel
      1    *    *  | 00
      0    1    *  | 01
      0    0    1  | 10
      0    0    0  | 11
      
      sel[0]=(!R)L + (!R)(!L)(!I)=(!R)(L+(!L)(!I))
      sel[1]=(!R)(!L)I + (!R)(!L)(!I)=(!R)(!L)
    */
    Not(in=reset, out=nR) ;
    Not(in=load, out=nL) ;
    Not(in=inc, out=nI) ;
    
    Mux16(a=tmpOut, b=incOut, sel=inc, out=nLoadResult) ;
    Mux16(a=nLoadResult, b=in, sel=load, out=nResetResult) ;
    Mux16(a=nResetResult, b=false, sel=reset, out=resetOut) ;
    Register(in=resetOut, load=true, out=out, out=tmpOut) ;
}
